---
AWSTemplateFormatVersion: "2010-09-09"
Description: "RED Data Publisher WebProxy CloudWatch Logs Queue"

Parameters:
  LogBucketStackName:
    Type: String
    Description: "Name of the stack which provides the S3 logging bucket"

Resources:
  Queue:
    Type: "AWS::SQS::Queue"
    Properties:
      VisibilityTimeout: 600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetters.Arn
        maxReceiveCount: 10

  DeadLetters:
    Type: "AWS::SQS::Queue"
    Properties:
      MessageRetentionPeriod: 604800 # 1 week

  QueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      Queues:
        - !Ref Queue
      PolicyDocument:
        Version: "2012-10-17"
        Id: QueuePolicy
        Statement:
          - Sid: Allow-SendMessage-To-Queue-From-S3-Event-Notification
            Effect: Allow
            Principal: "*"
            Action:
              - sqs:SendMessage
            Resource: !GetAtt Queue.Arn
            Condition:
              ArnEquals:
                ArnLike:
                  aws:SourceArn:
                    Fn::Join:
                      - ":*:*:"
                      - - "arn:aws:s3"
                        - Fn::ImportValue: !Sub "${LogBucketStackName}-S3BucketName"
Outputs:
  QueueUrl:
    Value: !Ref Queue
    Description: "The queue url containing log files requiring processing"
  QueueArn:
    Description: "The Queue ARN"
    Value: !GetAtt Queue.Arn
    Export:
      Description: "The queue containing log files requiring processing"
      Name: !Sub "${AWS::StackName}-QueueARN"
